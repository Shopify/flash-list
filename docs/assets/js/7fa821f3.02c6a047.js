"use strict";(self.webpackChunkflash_list=self.webpackChunkflash_list||[]).push([[881],{7216:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"v2-migration","title":"Migrating to v2","description":"This guide will help you migrate your existing FlashList v1 implementation to v2. FlashList v2 brings significant improvements in performance, developer experience, and new features while removing some deprecated props.","source":"@site/docs/v2-migration.md","sourceDirName":".","slug":"/v2-migration","permalink":"/flash-list/docs/v2-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/Shopify/flash-list/blob/main/documentation/docs/v2-migration.md","tags":[],"version":"current","lastUpdatedBy":"Bartosz Kaszubowski","lastUpdatedAt":1757634122000,"sidebarPosition":5,"frontMatter":{"id":"v2-migration","title":"Migrating to v2","slug":"/v2-migration","sidebar_position":5},"sidebar":"autoSidebar","previous":{"title":"What\'s new in v2","permalink":"/flash-list/docs/v2-changes"}}');var i=t(4848),r=t(8453);const a={id:"v2-migration",title:"Migrating to v2",slug:"/v2-migration",sidebar_position:5},o="Migrating from FlashList v1 to v2",l={},d=[{value:"Overview of Major Changes",id:"overview-of-major-changes",level:2},{value:"Step-by-Step Migration",id:"step-by-step-migration",level:2},{value:"Step 1: Update Package Version",id:"step-1-update-package-version",level:3},{value:"Step 2: Remove Deprecated Props",id:"step-2-remove-deprecated-props",level:3},{value:"Size Estimation Props (No Longer Needed!)",id:"size-estimation-props-no-longer-needed",level:4},{value:"Other Deprecated Props",id:"other-deprecated-props",level:4},{value:"Step 3: Update Changed Props",id:"step-3-update-changed-props",level:3},{value:"overrideItemLayout",id:"overrideitemlayout",level:4},{value:"Step 4: Replace Inverted Lists",id:"step-4-replace-inverted-lists",level:3},{value:"Step 5: Migrate MasonryFlashList to FlashList with masonry prop",id:"step-5-migrate-masonryflashlist-to-flashlist-with-masonry-prop",level:3},{value:"Step 6: Update Ref Types",id:"step-6-update-ref-types",level:3},{value:"Step 7: Replace CellContainer with View",id:"step-7-replace-cellcontainer-with-view",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"migrating-from-flashlist-v1-to-v2",children:"Migrating from FlashList v1 to v2"})}),"\n",(0,i.jsx)(n.p,{children:"This guide will help you migrate your existing FlashList v1 implementation to v2. FlashList v2 brings significant improvements in performance, developer experience, and new features while removing some deprecated props."}),"\n",(0,i.jsx)(n.h2,{id:"overview-of-major-changes",children:"Overview of Major Changes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"New architecture is required"})," - v2 only works on top of React Native's new architecture"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No more size estimates required"})," - FlashList v2 automatically handles all sizing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Masonry layout is now a prop"})," - MasonryFlashList component is deprecated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"maintainVisibleContentPosition enabled by default"})," - Better scroll position handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inverted prop deprecated"})," - Use maintainVisibleContentPosition instead"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step-migration",children:"Step-by-Step Migration"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-update-package-version",children:"Step 1: Update Package Version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install @shopify/flash-list@^2.0.0\n# or\nyarn add @shopify/flash-list@^2.0.0\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-remove-deprecated-props",children:"Step 2: Remove Deprecated Props"}),"\n",(0,i.jsx)(n.p,{children:"The following props have been deprecated and should be removed from your FlashList components:"}),"\n",(0,i.jsx)(n.h4,{id:"size-estimation-props-no-longer-needed",children:"Size Estimation Props (No Longer Needed!)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"<FlashList\n  data={data}\n  renderItem={renderItem}\n- estimatedItemSize={50}\n- estimatedListSize={{ height: 400, width: 300 }}\n- estimatedFirstItemOffset={0}\n/>\n"})}),"\n",(0,i.jsx)(n.h4,{id:"other-deprecated-props",children:"Other Deprecated Props"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"<FlashList\n  data={data}\n  renderItem={renderItem}\n- inverted={true}  // Use maintainVisibleContentPosition instead\n- onBlankArea={handleBlankArea}  // No longer supported\n- disableHorizontalListHeightMeasurement={true}  // No longer needed\n- disableAutoLayout={true}  // No auto layout in v2\n/>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3-update-changed-props",children:"Step 3: Update Changed Props"}),"\n",(0,i.jsx)(n.h4,{id:"overrideitemlayout",children:"overrideItemLayout"}),"\n",(0,i.jsxs)(n.p,{children:["In v1, ",(0,i.jsx)(n.code,{children:"overrideItemLayout"})," allowed both span changes and size estimates. In v2, it only supports span changes:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"// v1\noverrideItemLayout={(layout, item, index) => {\n  layout.span = item.span;\n- layout.size = 100; // No longer supported\n}}\n\n// v2\noverrideItemLayout={(layout, item) => {\n  layout.span = item.span; // Only span is supported\n}}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-4-replace-inverted-lists",children:"Step 4: Replace Inverted Lists"}),"\n",(0,i.jsxs)(n.p,{children:["If you were using ",(0,i.jsx)(n.code,{children:"inverted"})," prop (common in chat apps), replace it with ",(0,i.jsx)(n.code,{children:"maintainVisibleContentPosition"})," and reverse your data array:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"// v1 - Inverted list for chat\n<FlashList\n  data={messages}\n  renderItem={renderMessage}\n- inverted={true}\n- onEndReached={handler}\n/>\n\n// v2 - Use maintainVisibleContentPosition\n<FlashList\n  data={reversedMessages}\n  renderItem={renderMessage}\n+ maintainVisibleContentPosition={{\n+   autoscrollToBottomThreshold: 0.2,\n+   startRenderingFromBottom: true,\n+ }}\n+ onStartReached={handler}\n/>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-5-migrate-masonryflashlist-to-flashlist-with-masonry-prop",children:"Step 5: Migrate MasonryFlashList to FlashList with masonry prop"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:'// v1\n- import { MasonryFlashList } from "@shopify/flash-list";\n\n- <MasonryFlashList\n-   data={data}\n-   renderItem={renderItem}\n-   numColumns={3}\n-   estimatedItemSize={100}\n- />\n\n// v2\n+ import { FlashList } from "@shopify/flash-list";\n\n+ <FlashList\n+   data={data}\n+   renderItem={renderItem}\n+   numColumns={3}\n+   masonry\n+ />\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note: ",(0,i.jsx)(n.code,{children:"getColumnFlex"})," from MasonryFlashList is not supported in v2."]}),"\n",(0,i.jsx)(n.h3,{id:"step-6-update-ref-types",children:"Step 6: Update Ref Types"}),"\n",(0,i.jsxs)(n.p,{children:["The ref type for FlashList has changed from ",(0,i.jsx)(n.code,{children:"FlashList"})," to ",(0,i.jsx)(n.code,{children:"FlashListRef"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:'// v1\n- import { FlashList } from "@shopify/flash-list";\n- const listRef = useRef<FlashList<ItemType>>(null);\n\n// v2\n+ import { FlashList, FlashListRef } from "@shopify/flash-list";\n+ const listRef = useRef<FlashListRef<ItemType>>(null);\n\n<FlashList\n  ref={listRef}\n  data={data}\n  renderItem={renderItem}\n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"step-7-replace-cellcontainer-with-view",children:"Step 7: Replace CellContainer with View"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CellContainer"})," is no longer exported in v2. Replace it with React Native's ",(0,i.jsx)(n.code,{children:"View"}),". Apps forwarding custom ",(0,i.jsx)(n.code,{children:"CellRendererComponent"})," might need this change."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);